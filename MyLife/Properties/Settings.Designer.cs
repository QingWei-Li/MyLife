//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyLife.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string DBPath {
            get {
                return ((string)(this["DBPath"]));
            }
            set {
                this["DBPath"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"-- ----------------------------
-- Table structure for Diaries
-- ----------------------------
DROP TABLE IF EXISTS ""Diaries"";
CREATE TABLE ""Diaries"" (
""ID""  INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
""PubTime""  TEXT NOT NULL,
""Title""  TEXT,
""Contents""  TEXT
)

;

-- ----------------------------
-- Records of Diaries
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for Settings
-- ----------------------------
DROP TABLE IF EXISTS ""Settings"";
CREATE TABLE ""Settings"" (
""Key""  TEXT NOT NULL,
""Value""  TEXT,
PRIMARY KEY (""Key"" ASC)
)

;

-- ----------------------------
-- Records of Settings
-- ----------------------------
BEGIN;
INSERT INTO ""Settings"" (""Key"", ""Value"") VALUES ('Mail', null);
INSERT INTO ""Settings"" (""Key"", ""Value"") VALUES ('MailPwd', null);
INSERT INTO ""Settings"" (""Key"", ""Value"") VALUES ('POP', null);
INSERT INTO ""Settings"" (""Key"", ""Value"") VALUES ('Port', null);
INSERT INTO ""Settings"" (""Key"", ""Value"") VALUES ('Keyword', null);
COMMIT;

-- ----------------------------
-- Table structure for Tree
-- ----------------------------
DROP TABLE IF EXISTS ""Tree"";
CREATE TABLE ""Tree"" (
""ID""  INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
""PID""  INTEGER,
""DiaID""  INTEGER,
""Name""  TEXT
)

;

-- ----------------------------
-- Records of Tree
-- ----------------------------
BEGIN;
COMMIT;")]
        public string InitSql {
            get {
                return ((string)(this["InitSql"]));
            }
        }
    }
}
